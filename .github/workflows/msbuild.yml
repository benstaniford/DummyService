name: MSBuild

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  SOLUTION_FILE_PATH: .

  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
  BUILD_PLATFORM: x64

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        platform: ["x64", "x86"]

    steps:
    - uses: actions/checkout@v3

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=${{matrix.platform}} ${{env.SOLUTION_FILE_PATH}}

    - name: Locate VSTest
      uses: benstaniford/Setup-VSTest@v1
      id: setup_vstest

    - name: Run VSTest
      id: run_vstest
      working-directory: ${{matrix.platform}}\${{env.BUILD_CONFIGURATION}}\
      run: vstest.console.exe /Platform:${{matrix.platform}} .\DummyServiceLibTests.dll

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: DummyInstaller-${{env.BUILD_CONFIGURATION}}.msi
        path: DummyService/DummyService/DummyInstaller/bin/${{matrix.platform}}/${{env.BUILD_CONFIGURATION}}/DummyInstaller.msi

